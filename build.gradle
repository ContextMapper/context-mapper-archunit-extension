plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'nebula.release' version '13.0.0'
}

group 'org.contextmapper'

sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.tngtech.archunit:archunit-junit5:${archUnitVersion}"
    implementation "org.contextmapper:context-mapper-dsl:${cmlVersion}"
    implementation "org.jmolecules:jmolecules-ddd:${jmoleculesVersion}"
    implementation "org.jmolecules:jmolecules-events:${jmoleculesVersion}"
    implementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"

    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
}

sourceSets.test.java.srcDirs = ['src/test/java','src/test/cml']

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${project.name}"
            groupId = "${project.group}"
            version = "${project.version}"
            from components.java
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = 'Context Mapper ArchUnit Extension'
                description = 'An extension for ArchUnit to test code against a CML model'
                url = 'https://github.com/ContextMapper/context-mapper-archunit-extension'
                organization {
                    name = 'Context Mapper'
                    url = 'https://contextmapper.org/'
                }
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'https://github.com/ContextMapper/context-mapper-archunit-extension/blob/master/LICENSE'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/ContextMapper/context-mapper-archunit-extension/issues'
                }
                scm {
                    url = 'https://github.com/ContextMapper/context-mapper-archunit-extension'
                    connection = 'scm:git:git://github.com/ContextMapper/context-mapper-archunit-extension.git'
                    developerConnection = 'scm:git:ssh://git@github.com:ContextMapper/context-mapper-archunit-extension.git'
                }
                developers {
                    developer {
                        name = 'Stefan Kapferer'
                        email = 'stefan@contextmapper.org'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "${ossReleaseStagingRepository}"
            def snapshotsRepoUrl = "${ossSnapshotRepository}"
            url = project.version.toString().endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = System.getenv('OSSRH_USERNAME')
                password = System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}
